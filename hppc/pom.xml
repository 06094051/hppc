<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.carrotsearch</groupId>
    <artifactId>hppc-parent</artifactId>
    <version>0.7.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>hppc</artifactId>
  <packaging>jar</packaging>

  <name>HPPC Collections</name>
  <description>High Performance Primitive Collections. 
  Fundamental data structures (maps, sets, lists, stacks, queues) generated for
  combinations of object and primitive types to conserve JVM memory and speed
  up execution.</description>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
        <groupId>com.carrotsearch</groupId>
        <artifactId>hppc-template-processor</artifactId>
        <version>${project.version}</version>
        <scope>provided</scope>
        <optional>true</optional>
    </dependency>    

    <dependency>
      <groupId>com.carrotsearch.randomizedtesting</groupId>
      <artifactId>randomizedtesting-runner</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <properties>
    <template.processor.incremental>true</template.processor.incremental>
  </properties>

  <build>
    <defaultGoal>install</defaultGoal>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
          <executions>
            <execution>
              <id>default-jar</id>
              <phase>package</phase>
              <configuration>
                <!-- HPPC-144: esoteric combinations. -->
                <excludes>
                  <exclude>**/ByteByte*.class</exclude>
                  <exclude>**/ByteChar*.class</exclude>
                  <exclude>**/ByteShort*.class</exclude>
                  <exclude>**/ByteInt*.class</exclude>
                  <exclude>**/ByteFloat*.class</exclude>
                  <exclude>**/ByteLong*.class</exclude>
                  <exclude>**/ByteDouble*.class</exclude>
                  <exclude>**/ByteObject*.class</exclude>

                  <exclude>**/ByteOpenHashSet*.class</exclude>
                  <exclude>**/ByteScatterSet*.class</exclude>
                  <exclude>**/ByteSet*.class</exclude>

                  <exclude>**/FloatByte*.class</exclude>
                  <exclude>**/FloatChar*.class</exclude>
                  <exclude>**/FloatShort*.class</exclude>
                  <exclude>**/FloatInt*.class</exclude>
                  <exclude>**/FloatFloat*.class</exclude>
                  <exclude>**/FloatLong*.class</exclude>
                  <exclude>**/FloatDouble*.class</exclude>
                  <exclude>**/FloatObject*.class</exclude>

                  <exclude>**/FloatOpenHashSet*.class</exclude>
                  <exclude>**/FloatScatterSet*.class</exclude>
                  <exclude>**/FloatSet*.class</exclude>

                  <exclude>**/DoubleByte*.class</exclude>
                  <exclude>**/DoubleChar*.class</exclude>
                  <exclude>**/DoubleShort*.class</exclude>
                  <exclude>**/DoubleInt*.class</exclude>
                  <exclude>**/DoubleFloat*.class</exclude>
                  <exclude>**/DoubleLong*.class</exclude>
                  <exclude>**/DoubleDouble*.class</exclude>
                  <exclude>**/DoubleObject*.class</exclude>

                  <exclude>**/DoubleOpenHashSet*.class</exclude>
                  <exclude>**/DoubleScatterSet*.class</exclude>
                  <exclude>**/DoubleSet*.class</exclude>
                </excludes>
              </configuration>
            </execution>
            <execution>
              <id>esoteric-jar</id>
              <phase>package</phase>
              <goals>
                <goal>jar</goal>
              </goals>
              <configuration>
                <classifier>esoteric</classifier>
                <includes>
                  <include>**/ByteByte*.class</include>
                  <include>**/ByteChar*.class</include>
                  <include>**/ByteShort*.class</include>
                  <include>**/ByteInt*.class</include>
                  <include>**/ByteFloat*.class</include>
                  <include>**/ByteLong*.class</include>
                  <include>**/ByteDouble*.class</include>
                  <include>**/ByteObject*.class</include>

                  <include>**/ByteOpenHashSet*.class</include>
                  <include>**/ByteScatterSet*.class</include>
                  <include>**/ByteSet*.class</include>

                  <include>**/FloatByte*.class</include>
                  <include>**/FloatChar*.class</include>
                  <include>**/FloatShort*.class</include>
                  <include>**/FloatInt*.class</include>
                  <include>**/FloatFloat*.class</include>
                  <include>**/FloatLong*.class</include>
                  <include>**/FloatDouble*.class</include>
                  <include>**/FloatObject*.class</include>

                  <include>**/FloatOpenHashSet*.class</include>
                  <include>**/FloatScatterSet*.class</include>
                  <include>**/FloatSet*.class</include>

                  <include>**/DoubleByte*.class</include>
                  <include>**/DoubleChar*.class</include>
                  <include>**/DoubleShort*.class</include>
                  <include>**/DoubleInt*.class</include>
                  <include>**/DoubleFloat*.class</include>
                  <include>**/DoubleLong*.class</include>
                  <include>**/DoubleDouble*.class</include>
                  <include>**/DoubleObject*.class</include>

                  <include>**/DoubleOpenHashSet*.class</include>
                  <include>**/DoubleScatterSet*.class</include>
                  <include>**/DoubleSet*.class</include>
                </includes>
              </configuration>
            </execution>            
          </executions>
      </plugin>

      <plugin>
        <groupId>com.carrotsearch</groupId>
        <artifactId>hppc-template-processor</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <id>generate-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>template-processor</goal>
            </goals>
            <configuration>
              <incremental>${template.processor.incremental}</incremental>
              <attachSources>main</attachSources>
              <templatesDir>${project.basedir}/src/main/templates</templatesDir>
              <outputDir>${project.build.directory}/generated-sources/main/java</outputDir>
            </configuration>
          </execution>
          <execution>
            <id>generate-test-sources</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>template-processor</goal>
            </goals>
            <configuration>
              <incremental>${template.processor.incremental}</incremental>
              <attachSources>test</attachSources>
              <templatesDir>${project.basedir}/src/test/templates</templatesDir>
              <outputDir>${project.build.directory}/generated-sources/test/java</outputDir>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.carrotsearch.randomizedtesting</groupId>
        <artifactId>junit4-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>junit4-tests</id>
            <goals>
              <goal>junit4</goal>
            </goals>
            <configuration>
              <includes>
                <include>**/*Test.*</include>
              </includes>
              <excludes>
                <exclude>**/*$*</exclude>
                <exclude>**/Abstract*</exclude>
              </excludes>

              <parallelism>auto</parallelism>
              <maxMemory>750m</maxMemory>

              <listeners>
                <report-text
                    showThrowable="false" 
                    showStackTraces="false" 
                    showOutput="onError"

                    showStatusOk="false"
                    showStatusError="false"
                    showStatusFailure="false"
                    showStatusIgnored="false"

                    showSuiteSummary="true"
                />
                <report-json file="${project.build.directory}/surefire-reports/test-results.html" />
                <report-ant-xml dir="${project.build.directory}/surefire-reports/" mavenExtensions="true" />
              </listeners>

              <assertions>
                <enable package="com.carrotsearch"/>
              </assertions>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>make-release-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/bin.xml</descriptor>
              </descriptors>
              <tarLongFileMode>gnu</tarLongFileMode>
              <attach>false</attach>
              <appendAssemblyId>false</appendAssemblyId>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>de.thetaphi</groupId>
        <artifactId>forbiddenapis</artifactId>

        <executions>
          <execution>
            <id>check-forbidden-apis</id>
            <configuration>
              <excludes><!-- Override in subprojects. --></excludes>
              <signaturesFiles>
                <signaturesFile>${project.parent.basedir}/etc/forbidden-apis/intrinsics.txt</signaturesFile>
              </signaturesFiles> 
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>eclipse</id>
      <activation>
        <property>
          <name>m2e.version</name>
        </property>
      </activation>
      <properties>
        <!-- Skip compilation. -->
        <maven.test.skip>true</maven.test.skip>
        <maven.main.skip>true</maven.main.skip>
        <maven.install.skip>true</maven.install.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.carrotsearch</groupId>
            <artifactId>hppc-template-processor</artifactId>
            <version>${project.version}</version>
            <executions>
              <execution>
                <id>add-templates</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/main/templates</source>
                  </sources>
                </configuration>
              </execution>
              <execution>
                <id>add-templates-tests</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/test/templates</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>sonatype-oss-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <configuration>
                  <encoding>${project.build.sourceEncoding}</encoding>
                  <docfilessubdirs>true</docfilessubdirs>
                  <windowtitle>HPPC v${project.version} API Documentation (JavaDoc)</windowtitle>
                  <doctitle>HPPC v${project.version} API Documentation</doctitle>
                  <header><![CDATA[<div id='header'><a class='logo' target='_top' href='http://labs.carrotsearch.com'></a>High Performance Primitive Collections (HPPC) v${project.version} <br>API Documentation</div>]]></header>
                  <overview>${basedir}/src/main/java/com/carrotsearch/hppc/overview.html</overview>
                  <failOnError>true</failOnError>
                  <use>false</use>
                  <groups>
                    <group>
                      <title>HPPC</title>
                      <packages>com.carrotsearch.hppc*</packages>
                    </group>
                  </groups>
                </configuration>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>        
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
